The methods of list objects:

append(x)

extend(L)

insert(i,x)
    i is position
    x is value

remove(x)

    default remove the first of x ,if not find return an error

pop([i])
    remove the item at the give position

index(x)
    return the value of x's index,get index number

count(x)

    return the value x's appears times

sort()

    sort the item of the list,in place

reverse()

    reverse the elements of the list ,in place

>>> a=[1,2,-10,55,-100,9,53]
>>> count(3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'count' is not defined
>>> sort(a)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sort' is not defined
>>> a.sort()
>>> a
[-100, -10, 1, 2, 9, 53, 55]
>>> a
[-100, -10, 1, 2, 9, 53, 55]
>>> a.reverse
<built-in method reverse of list object at 0x7f00af721290>
>>> a.reverse()
>>> a
[55, 53, 9, 2, 1, -10, -100]
>>> index(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'index' is not defined
>>> a.index(1)
4
>>> a.insert(3,199)
>>> a
[55, 53, 9, 199, 2, 1, -10, -100]

---------------------------------------------------
filter map  reduce

1 . filter

>>> def f(x): return x%2 != 0 and x%3 !=0
... 
>>> f(100)
False
>>> f(101)
True

>>> filter(f,range(3,20))
[5, 7, 11, 13, 17, 19]

--------------------------------------------------
2. map

>>> map(cube,range(2,7))
[8, 27, 64, 125, 216]

>>> def add(x,y):return x+y
... 
>>> map(add,range(2,9),range(3,10))
[5, 7, 9, 11, 13, 15, 17]

>>> map(add,range(0,101),range(0,101))
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200]

----------------------------------------------
3. reduce
>>> reduce(add,range(0,101))
5050

